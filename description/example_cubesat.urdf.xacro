<?xml version="1.1"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="cubesat">
    <xacro:include filename="example_include.xacro" />
    <xacro:include filename="example_gazebo.xacro" />
        
    <link name="world"></link>
    
    <joint name="ADCS_joint" type="floating">
    	<origin xyz="0 0 0" rpy="0 0 0"/>
    	<parent link="world"/>
    	<child link="ADCS_link"/>
    </joint>

    <!-- - THIS WILL BE PLACED ON THE _INCLUDE FILE AS PROPERTIES -->
    
    <link name="ADCS_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${U_aresta} ${U_aresta} ${U_aresta}" />
            </geometry>
	 <material name="orange"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${U_aresta} ${U_aresta} ${U_aresta}" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${U_massa}" />
            <inertia ixx="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" iyz="0.0"
                    izz="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" />
        </inertial>
    </link>
    
	
	<joint name="RDR3_joint" type="continuous">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="ADCS_link"/>
		<child link="RDR3_link"/>
		<axis xyz ="0 0 1" rpy = "0 0 0"/>
		<limit effort="10000" velocity="10000"/>
		<joint_properties damping ="0.0" friction="0.0"/>
	</joint>

    <link name="RDR3_link">
        <visual>
            <origin xyz="0 0 -${(U_aresta+RDR_length)/2}" rpy="0 0 0"/>
		<geometry>
			<cylinder radius="${RDR_radius}" length="${RDR_length}"/>
		</geometry>
	 <material name="blue"/>
        </visual>
        <collision>
            <origin xyz="0 0 -${(U_aresta+RDR_length)/2}" rpy="0 0 0"/>
		<geometry>
			<cylinder radius="${RDR_radius}" length="${RDR_length}"/>
		</geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 -${(U_aresta+RDR_length)/2}" rpy="0 0 0"/>
            <mass value="${RDR_mass}" />
            <inertia ixx="${(1/12) * RDR_mass * (3*RDR_radius*RDR_radius + RDR_length*RDR_length)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * RDR_mass * (3*RDR_radius*RDR_radius + RDR_length*RDR_length)}" iyz="0.0"
                    izz="${(1/2) * RDR_mass * (RDR_radius*RDR_radius)}" />
        </inertial>
    </link>

	<joint name="RDR2_joint" type="continuous">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="ADCS_link"/>
		<child link="RDR2_link"/>
		<axis xyz ="1 0 0" rpy = "0 0 0"/>
		<limit effort="10000" velocity="10000"/>
		<joint_properties damping ="0.0" friction="0.0"/>
	</joint>

    <link name="RDR2_link">
        <visual>
            <origin xyz="-${(U_aresta+RDR_length)/2} 0 0" rpy="0 ${pi/2} 0"/>
		<geometry>
			<cylinder radius="${RDR_radius}" length="${RDR_length}"/>
		</geometry>
	 <material name="red"/>
        </visual>
        <collision>
            <origin xyz="-${(U_aresta+RDR_length)/2} 0 0" rpy="0 ${pi/2} 0"/>
		<geometry>
			<cylinder radius="${RDR_radius}" length="${RDR_length}"/>
		</geometry>
        </collision>
        <inertial>
            <origin xyz="-${(U_aresta+RDR_length)/2} 0 0" rpy="0 ${pi/2} 0"/>
            <mass value="${RDR_mass}" />
            <inertia iyy="${(1/12) * RDR_mass * (3*RDR_radius*RDR_radius + RDR_length*RDR_length)}" ixy="0.0" ixz="0.0"
                    izz="${(1/12) * RDR_mass * (3*RDR_radius*RDR_radius + RDR_length*RDR_length)}" iyz="0.0"
                    ixx="${(1/2) * RDR_mass * (RDR_radius*RDR_radius)}" />
        </inertial>
    </link>

	
	<joint name="RDR1_joint" type="continuous">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="ADCS_link"/>
		<child link="RDR1_link"/>
		<axis xyz ="0 1 0" rpy = "0 0 0"/>
		<limit effort="10000" velocity="10000"/>
		<joint_properties damping ="0.0" friction="0.0"/>
	</joint>

    <link name="RDR1_link">
        <visual>
            <origin xyz="0 -${(U_aresta+RDR_length)/2} 0" rpy="${pi/2} 0 0"/>
		<geometry>
			<cylinder radius="${RDR_radius}" length="${RDR_length}"/>
		</geometry>
	 <material name="green"/>
        </visual>
        <collision>
            <origin xyz="0 -${(U_aresta+RDR_length)/2} 0" rpy="${pi/2} 0 0"/>
		<geometry>
			<cylinder radius="${RDR_radius}" length="${RDR_length}"/>
		</geometry>
        </collision>
        <inertial>
            <origin xyz="0 -${(U_aresta+RDR_length)/2} 0" rpy="${pi/2} 0 0"/>
            <mass value="${RDR_mass}" />
            <inertia izz="${(1/12) * RDR_mass * (3*RDR_radius*RDR_radius + RDR_length*RDR_length)}" ixy="0.0" ixz="0.0"
                    ixx="${(1/12) * RDR_mass * (3*RDR_radius*RDR_radius + RDR_length*RDR_length)}" iyz="0.0"
                    iyy="${(1/2) * RDR_mass * (RDR_radius*RDR_radius)}" />
        </inertial>
    </link>

    <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
    <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
    <!-- - It moves along the X axis -->
    <!-- - We need to specify limits for the motion -->
    <joint name="2U_joint" type="fixed">
        <origin xyz="0 0 ${U_aresta/2} " rpy="0 0 0"/>
        <parent link="ADCS_link"/>
        <child link="2U_link"/>
    </joint>


    <!-- slider_link is the box skimming across the top of the base. Its parameters are similar to the base_link, however: -->
    <!-- - Instead of explicitly describing a colour, it uses the named material "blue". It knows about "blue" that material was included in example_include.xacro. -->
    <!-- - Instead of explicitly describing the inertia, we use a macro that was defined in the example_include.xacro -->

    <link name="2U_link">
        <visual>
            <origin xyz="0 0 ${U_aresta/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${U_aresta} ${U_aresta} ${U_aresta}" />
            </geometry>
		<material name="gray"/>
        </visual>
        <collision>
            <origin xyz="0 0 ${U_aresta/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${U_aresta} ${U_aresta} ${U_aresta}" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 ${U_aresta/2}" rpy="0 0 0"/>
            <mass value="${U_massa}" />
            <inertia ixx="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" iyz="0.0"
                    izz="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" />
        </inertial>
    </link>



    <!-- arm_joint describes the rotation of the arm and is centred around the top corner of the slider box. -->
    <!-- - The axis of rotation is -1 in Y, so that positive is "up" -->
    <!-- - The upper limit uses xacro's mathematical features -->
    <joint name="camera_joint" type="fixed">
        <origin xyz="0 0 ${(U_aresta+U_aresta/2)}" rpy="0 0 0"/>
        <parent link="2U_link"/>
        <child link="camera_link"/>
    </joint>



    <link name="camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${U_aresta} ${U_aresta} ${U_aresta}" />
            </geometry>
		<material name="white"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${U_aresta} ${U_aresta} ${U_aresta}" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="1" />
            <inertia ixx="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" iyz="0.0"
                    izz="${(1/12) * U_massa * (U_aresta*U_aresta+U_aresta*U_aresta)}" />
        </inertial>
    </link>
   



</robot>
